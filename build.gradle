buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.bintray"


sourceSets {
    main
    {
        java
        { srcDir 'src' }
        resources
        { srcDir 'src' }
    }
    test
    {
        java
        { srcDir 'src' }
        resources
        { srcDir 'src' }
    }
}

/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = {
    ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}


sourceCompatibility = 1.8

group = 'net.roybot'
version = getVersionName()

/*
compileJava 
{
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true // may not needed on 1.8
    options.forkOptions.executable = 'javac' // may not needed on 1.8
}/**/

test 
{
    testLogging.showStandardStreams = true 
    testLogging 
    {
        events "passed", "skipped", "failed"
    }

    exclude '**/demo/**'

    maxHeapSize = "16G"
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies 
{
    // JUnit:
    compile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Commons:
    //compile 'org.apache.commons:commons-collections4:4.0'
    //compile 'org.apache.commons:commons-lang3:3.4'
    //compile 'org.apache.commons:commons-math3:3.5'

    // guava:
    //compile 'com.google.guava:guava:18.0'

    // Trove:
    compile 'net.sf.trove4j:trove4j:3.0.3'

    // Sl4J:
    compile 'org.slf4j:slf4j-api:1.7.9'

    // Pi4J
    compile 'com.pi4j:pi4j-core:1.0'
    compile 'com.pi4j:pi4j-device:1.0'

    // V4L4J:
    compile 'com.github.sarxos:v4l4j:0.9.1-r507'

    //Webcam Capture:
    compile 'com.github.sarxos:webcam-capture:0.3.11'
    compile 'com.github.sarxos:webcam-capture-driver-v4l4j:0.3.11'


    // imglib2:
    //compile ('net.imglib2:imglib2:2.2.0'){transitive = true}
    //compile ('net.imglib2:imglib2-ui:2.0.0-beta-28'){transitive = true}
    //compile ('net.imglib2:imglib2-ij:2.0.0-beta-30'){transitive = true}
    //compile ('net.imglib2:imglib2-algorithm:0.2.1'){transitive = true}
    

		// ClearControl:
		// compile group: "net.clearcontrol", name: "ClearControl", version: "(,1.0.0]", changing: true

    // CoreMem:
    // compile group: "net.coremem", name: "CoreMem", version: "(,1.0.0]", changing: true, transitive:true


    
}


repositories 
{
    // main repos:
    mavenCentral()
    maven { url  "http://oss.sonatype.org/content/groups/public"} 
    maven { url  "http://mvnrepository.com/artifact" }

    // RTlib:
    maven { url  "http://dl.bintray.com/clearcontrol/ClearControl" }

    //imglib2:
    maven { url  "http://maven.imagej.net/content/repositories/releases" }
    maven { url  "http://maven.imagej.net/content/repositories/snapshots" }
    maven { url  "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/" }

}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }


//***********************************************************************************

// PUBLISHING




artifacts
{
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar { classifier "sources" }
        }
    }
}











